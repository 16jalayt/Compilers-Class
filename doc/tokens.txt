Punctuation:      RegEx:
+               Punctuation ::= + | - | * | / | < | =
-  (minus or neg)             | ( | ) | , | :
*
/
<
=
(
)
,
:
NonExamples:
{}&*[]

Keywords:
integer         Keywords ::= integer | boolean  |if
boolean                     | then | else | not | and | or | function
if          
then       
else   
not         
and        
or
function
NonExamples:
Integer, bolean, while, potato

Identifiers:        Identifiers ::= main | print | true | false
main       
print
true
false

lambda, src.Main, truck

Integers:           no longer needed
1                  Integers ::=   214748364[0-7]{0, 1}
                                | 21474836[0-3][0-9]{0, 1}
                                | 2147483[7-9][0-9]{0, 1} 
                                | 2147483[0-5][0-9]{0, 2}
                                | 214748[4-9][0-9]{0, 2}
                                | 214748[0-2][0-9]{0, 3}
                                | 214749[0-9]{0, 3}
                                | 21474[0-7][0-9]{0, 4}
                                | 2147[5-9][0-9]{0, 4}
                                | 2147[0-3][0-9]{0, 5}
                                | 214[8-9][0-9]{0, 5}
                                | 214[0-6][0-9]{0, 6}
                                | 21[5-9][0-9]{0, 6}
                                | 21[0-3][0-9]{0, 7}
                                | 2[2-9][0-9]{0, 7}
                                | 20[0-9]{0, 8}
                                | 1[0-9]{0, 9}
                                | [3-9][0-9]{0, 8}
                                | (0 | 2 )
457389
-7
NonExamples:
1.3, any float, >= 2^31

end_of_file
NonExamples:
hello, \n, \r\n, \r